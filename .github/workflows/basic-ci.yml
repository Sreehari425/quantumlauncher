name: CI

on:
  push:
    branches:
      - "**"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Rust fmt + clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Toolchain (stable with rustfmt, clippy)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: cargo fmt --check
        run: cargo fmt --all -- --check

      - name: cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: cargo check
        run: cargo check --all-targets --all-features

  build:
    name: Build ${{ matrix.build }}
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            cross: false
          - build: linux aarch64
            os: ubuntu-22.04-arm
            target: aarch64-unknown-linux-gnu
            cross: false
          - build: linux armv7
            os: ubuntu-22.04
            target: armv7-unknown-linux-gnueabihf
            cross: true
          - build: macOS x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            cross: false
          - build: macOS aarch64
            os: macos-latest
            target: aarch64-apple-darwin
            cross: false
          - build: Windows x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            cross: false
          - build: Windows aarch64
            os: windows-11-arm
            target: aarch64-pc-windows-msvc
            cross: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Toolchain (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Install cross (for armv7)
        if: matrix.cross
        run: cargo install cross --locked

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          if [ "${{ matrix.cross }}" = "true" ]; then
            cross build --all-targets --all-features --target ${{ matrix.target }} --verbose
          else
            cargo build --all-targets --all-features --target ${{ matrix.target }} --verbose
          fi
